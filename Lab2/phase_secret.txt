Dump of assembler code for function s3cret_phase:
   0x000000000040126c <+0>:	push   %rbx
   0x000000000040126d <+1>:	callq  0x401c50 <read_line>
   0x0000000000401272 <+6>:	mov    $0xa,%edx			#edx = 0xa
   0x0000000000401277 <+11>:	mov    $0x0,%esi			#esi = 0
   0x000000000040127c <+16>:	mov    %rax,%rdi			#rdi = rax
   0x000000000040127f <+19>:	callq  0x400c10 <strtol@plt>
   0x0000000000401284 <+24>:	mov    %rax,%rbx			#rbx = rax
   0x0000000000401287 <+27>:	lea    -0x1(%rax),%eax			#eax = *(rax-0x1)
   0x000000000040128a <+30>:	cmp    $0x3e8,%eax			
   0x000000000040128f <+35>:	ja     0x4012bd <s3cret_phase+81>	#goto <+81> if eax > 0x3e8 = 1000
   0x0000000000401291 <+37>:	mov    %ebx,%esi			#esi = ebx (our input)
   0x0000000000401293 <+39>:	mov    $0x604110,%edi			#edi = 0x604110
   0x0000000000401298 <+44>:	callq  0x40122f <fun7>
   0x000000000040129d <+49>:	cmp    $0x5,%eax			
   0x00000000004012a0 <+52>:	jne    0x4012c4 <s3cret_phase+88>	#explode if eax != 5
   0x00000000004012a2 <+54>:	mov    $0x402ae0,%edi			#edi = 0x402ae0 
   0x00000000004012a7 <+59>:	callq  0x400b60 <puts@plt>
   0x00000000004012ac <+64>:	mov    $0x402b08,%edi
   0x00000000004012b1 <+69>:	callq  0x400b60 <puts@plt>
   0x00000000004012b6 <+74>:	callq  0x40162b <phase_defused>
   0x00000000004012bb <+79>:	pop    %rbx
   0x00000000004012bc <+80>:	retq   
   0x00000000004012bd <+81>:	callq  0x401666 <explode_bomb>
   0x00000000004012c2 <+86>:	jmp    0x401291 <s3cret_phase+37>
   0x00000000004012c4 <+88>:	callq  0x401666 <explode_bomb>
   0x00000000004012c9 <+93>:	jmp    0x4012a2 <s3cret_phase+54>


Dump of assembler code for function fun7:
   0x000000000040122f <+0>:	test   %rdi,%rdi		
   0x0000000000401232 <+3>:	je     0x401266 <fun7+55>		#goto <+55> if rdi==0
   0x0000000000401234 <+5>:	sub    $0x8,%rsp
   0x0000000000401238 <+9>:	mov    (%rdi),%edx			#edx = *rdi (root node)
   0x000000000040123a <+11>:	cmp    %esi,%edx			
   0x000000000040123c <+13>:	jg     0x40124a <fun7+27>		#goto <+27> if edx > esi (go to left child)
   0x000000000040123e <+15>:	mov    $0x0,%eax			#eax = 0
   0x0000000000401243 <+20>:	jne    0x401257 <fun7+40>		#goto <+40> if edx < esi (go to right child)
   0x0000000000401245 <+22>:	add    $0x8,%rsp		
   0x0000000000401249 <+26>:	retq   
   0x000000000040124a <+27>:	mov    0x8(%rdi),%rdi			#rdi = *(rdi+0x8)
   0x000000000040124e <+31>:	callq  0x40122f <fun7>			#recursive call to fun7()
   0x0000000000401253 <+36>:	add    %eax,%eax			#eax = eax*2
   0x0000000000401255 <+38>:	jmp    0x401245 <fun7+22>		#done
   0x0000000000401257 <+40>:	mov    0x10(%rdi),%rdi			#rdi = *(rdi+0x10)
   0x000000000040125b <+44>:	callq  0x40122f <fun7>			#recursive call to fun7()
   0x0000000000401260 <+49>:	lea    0x1(%rax,%rax,1),%eax		#eax = *(rax*2+0x1)
   0x0000000000401264 <+53>:	jmp    0x401245 <fun7+22>		#done
   0x0000000000401266 <+55>:	mov    $0xffffffff,%eax			
   0x000000000040126b <+60>:	retq   


(gdb) x/200u 0x604110
0x604110 <n1>:	36	0x00604130<n21>		0x00604150<n22>
0x604130 <n21>:	8	0x006041b0<n31>		0x00604170<n32>
0x604150 <n22>:	50	0x00604190<n33>		0x006041d0<n34>
0x604170 <n32>:	22	0x00604290<n43>		0x00604250<n44>
0x604190 <n33>:	45	0x006041f0<n45>		0x006042b0<n46>
0x6041b0 <n31>:	6	0x00604210<n41>		0x00604270<n42>
0x6041d0 <n34>:	107	0x00604230<n47>		0x006042d0<n48>
0x6041f0 <n45>:	40	0x00000000	
0x604210 <n41>:	1	0x00000000
0x604230 <n47>:	99	0x00000000
0x604250 <n44>:	35	0x00000000
0x604270 <n42>:	7	0x00000000
0x604290 <n43>:	20	0x00000000
0x6042b0 <n46>:	47	0x00000000
0x6042d0 <n48>:	1001	0x00000000

the tree looks like this:
			    36

            8                                50
    6	            22              45              107
1	7	20	35	40	47	99	1001


0x000000000040129d <+49>:	cmp    $0x5,%eax  <== this line checks if eax is equal to 5
eax is modified throughout the tree traversal:
eax is initialized to be 0
traverse left: eax = eax * 2
traverse right: eax = 2 * eax + 1

so to get 5, we want:
eax = 2 * 0 + 1 = 1	right 
eax = 2 * 1 = 2		left
eax = 2 * 2 + 1 = 5	right

traversing R->L->R obtains 47 in the tree.

solution: 47





